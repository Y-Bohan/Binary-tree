/*
度：一个节点的一级子节点个数称为度的值
叶子：没有子节点的结点为叶子，即终端节点
根：非终端节点
深度：
	结点深度：假如当前结点处于第n层,则当前结点深度为n
	树的深度：树的总层数为树的深度
	
二叉树：
	定义：所有结点的度都小于等于2
	前序遍历：先访问根，再访问左右子节点  根-左-右
	中序遍历：先访问左节点，再访问根，最后访问右节点  左-根-右
	后序遍历：先访问左节点，再访问右节点，最后访问根  左-右-根
	数组与二叉树之间的算法转换：
		父节点*2+1=左子节点
		父节点*2+2=右子节点
		
	二叉树的链表实现：
		节点类：
		class Node
		{
			public:
				int index; //索引
				int data;  //自己本身节点数据
				Node* L_child; //左子节点
				Node* R_child; //右子节点
				Node* Parent; //父节点
		};	
*/